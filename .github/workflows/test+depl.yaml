name: Docker Build and Deploy

on:
  push:
    branches: [main]
    tags: ['v*.*.*']

env:
  REGISTRY: docker.io
  IMAGE_NAME: mkuliaev/my-nginx-app
  K8S_NAMESPACE: kuliaev-diplom
  DEPLOYMENT_NAME: kuliaev-diplom.ru
  CONTAINER_NAME: kuliaev-diplom-nginx

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:stable
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          push: ${{ github.event_name == 'push' }}

deploy:
  needs: build
  if: startsWith(github.ref, 'refs/tags/v')
  runs-on: ubuntu-latest
  steps:
    # Шаг 1: Настройка kubeconfig с фиксом IP
    - name: Configure kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
        sed -i 's/158.160.162.2/10.233.0.1/g' ~/.kube/config

    # Шаг 2: Проверка подключения к кластеру
    - name: Test cluster connection
      run: kubectl cluster-info

    # Шаг 3: Обновление образов в registry
    - name: Update image tags
      run: |
        docker login ${{ env.REGISTRY }} -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
        docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:stable
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:stable

    # Шаг 4: Применение конфигурации
    - name: Apply deployment
      run: kubectl apply -f app-deployment.yaml --validate=false

    # Шаг 5: Перезапуск deployment для применения изменений
    - name: Restart deployment
      run: |
        kubectl -n ${{ env.K8S_NAMESPACE }} rollout restart deployment/${{ env.DEPLOYMENT_NAME }}

    # Шаг 6: Проверка статуса
    - name: Verify deployment
      run: |
        kubectl -n ${{ env.K8S_NAMESPACE }} rollout status deployment/${{ env.DEPLOYMENT_NAME }}
        kubectl -n ${{ env.K8S_NAMESPACE }} get pods -w