name: Docker Build and Deploy

on:
  push:
    branches: [main]
    tags: ['v*.*.*']

env:
  REGISTRY: docker.io
  IMAGE_NAME: mkuliaev/my-nginx-app
  K8S_NAMESPACE: kuliaev-diplom
  DEPLOYMENT_NAME: nginx-app
  CONTAINER_NAME: nginx

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}

  deploy:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Set up kubectl (with insecure TLS)
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.5'  # Фиксируем версию

      - name: Configure insecure kubeconfig
        run: |
          mkdir -p ~/.kube
          # Генерируем kubeconfig с отключенной проверкой TLS
          cat <<EOF > ~/.kube/config
          apiVersion: v1
          clusters:
          - cluster:
              insecure-skip-tls-verify: true
              server: https://158.160.XXX.XXX:6443  # Ваш IP мастера
            name: insecure-cluster
          contexts:
          - context:
              cluster: insecure-cluster
              user: admin
            name: insecure-context
          current-context: insecure-context
          kind: Config
          users:
          - name: admin
            user:
              token: "${{ secrets.K8S_ADMIN_TOKEN }}"  # Токен администратора
          EOF
          chmod 600 ~/.kube/config

      - name: Run commands without TLS checks
        run: |
          kubectl version
          kubectl get nodes
          kubectl -n ${{ env.K8S_NAMESPACE }} get deploy
          kubectl -n ${{ env.K8S_NAMESPACE }} set image deploy/${{ env.DEPLOYMENT_NAME }} \
            ${{ env.CONTAINER_NAME }}=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          kubectl -n ${{ env.K8S_NAMESPACE }} rollout status deploy/${{ env.DEPLOYMENT_NAME }}
